<?php

/**
 * @file
 * Contains gemini_ai.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function gemini_ai_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.gemini_ai':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Gemini AI Integration module provides enhanced AI capabilities using Google Gemini API through the Drupal AI module framework.') . '</p>';
      $output .= '<h3>' . t('Features') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('Content generation using Google Gemini') . '</li>';
      $output .= '<li>' . t('AI-powered content suggestions') . '</li>';
      $output .= '<li>' . t('Text analysis and enhancement') . '</li>';
      $output .= '<li>' . t('Automated content tagging') . '</li>';
      $output .= '</ul>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for node forms.
 */
function gemini_ai_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add AI assistance button to content creation forms
  if (isset($form['body'])) {
    $form['ai_assistance'] = [
      '#type' => 'details',
      '#title' => t('AI Content Assistant'),
      '#group' => 'advanced',
      '#weight' => 100,
      '#open' => FALSE,
    ];
    
    $form['ai_assistance']['generate_content'] = [
      '#type' => 'button',
      '#value' => t('Generate Content with Gemini'),
      '#ajax' => [
        'callback' => '_gemini_ai_generate_content_callback',
        'wrapper' => 'ai-content-output',
      ],
      '#attributes' => [
        'class' => ['button--primary'],
      ],
    ];
    
    $form['ai_assistance']['ai_prompt'] = [
      '#type' => 'textarea',
      '#title' => t('AI Prompt'),
      '#description' => t('Describe what you want the AI to generate.'),
      '#rows' => 3,
    ];
    
    $form['ai_assistance']['ai_output'] = [
      '#type' => 'markup',
      '#markup' => '<div id="ai-content-output"></div>',
    ];
  }
}

/**
 * AJAX callback for content generation.
 */
function _gemini_ai_generate_content_callback($form, FormStateInterface $form_state) {
  $response = new \Drupal\Core\Ajax\AjaxResponse();
  
  try {
    $prompt = $form_state->getValue('ai_prompt');
    if (empty($prompt)) {
      $response->addCommand(new \Drupal\Core\Ajax\HtmlCommand('#ai-content-output', 
        '<div class="messages messages--warning">' . t('Please enter a prompt.') . '</div>'));
      return $response;
    }
    
    // Get AI service and generate content
    $ai_service = \Drupal::service('ai.provider_manager');
    $content = t('AI content generation will be implemented here with prompt: @prompt', ['@prompt' => $prompt]);
    
    $response->addCommand(new \Drupal\Core\Ajax\HtmlCommand('#ai-content-output', 
      '<div class="messages messages--status"><h4>' . t('Generated Content:') . '</h4><p>' . $content . '</p></div>'));
      
  } catch (\Exception $e) {
    $response->addCommand(new \Drupal\Core\Ajax\HtmlCommand('#ai-content-output', 
      '<div class="messages messages--error">' . t('Error generating content: @error', ['@error' => $e->getMessage()]) . '</div>'));
  }
  
  return $response;
}
